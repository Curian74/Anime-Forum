@using WibuBlog.Helpers
@using WibuBlog.ViewModels.Report
@model ReportsVM

<link rel="stylesheet" href="~/fontawesome/css/all.css" />
<link rel="stylesheet" href="~/css/postDetail.css" />
<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.17.2/dist/sweetalert2.min.css" rel="stylesheet">

<div class="container-fluid">
    <div class="card">
        <div class="card-header bg-primary text-white">
            <h4 class="mb-0">Report Management</h4>
        </div>
        <div class="card-body">
            <div class="row mb-3">
                <div class="col-md-4">
                    <select class="form-select"
                            asp-items="@Model.CategoryList"
                            asp-for="@Model.PostCategoryId"
                            name="PostCategoryId">
                        <option value="">--Select a category--</option>
                    </select>
                </div>
                <div class="col-md-4">
                    <select class="form-select" id="statusFilter" name="FilterBy">
                        <option value="">All Statuses</option>
                        <option value="pending">Pending</option>
                        <option value="approved">Approved</option>
                        <option value="rejected">Rejected</option>
                    </select>
                </div>
                <div class="col-md-4">
                    <select class="form-select" id="sortBy" name="OrderBy">
                        <option value="CreatedAt-true">Newest First</option>
                        <option value="CreatedAt-false">Oldest First</option>
                    </select>
                </div>
            </div>

            @if (Model?.Reports?.Items != null && Model.Reports.Items.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead class="table-light">
                            <tr>
                                <th>Username</th>
                                <th>Category</th>
                                <th>Post Title</th>
                                <th>Reason</th>
                                <th>Status</th>
                                <th>Note</th>
                                <th>Created At</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="reportsTableBody">
                            @foreach (var report in Model.Reports.Items)
                            {
                                <tr data-report-id="@report.Id">
                                    <td>@report.Username</td>
                                    <td>@report.CategoryName</td>
                                    <td>@report.PostTitle</td>
                                    <td>@report.Reason</td>
                                    <td>
                                        @switch (report.IsApproved)
                                        {
                                            case true:
                                                <span class="badge bg-success">Approved</span>
                                                break;
                                            case false:
                                                <span class="badge bg-danger">Rejected</span>
                                                break;
                                            default:
                                                <span class="badge bg-warning">Pending</span>
                                                break;
                                        }
                                    </td>
                                    <td>@(report.Note ?? "N/A")</td>
                                    <td>@report.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                                    <td>
                                        <a href="/Post/Detail/@report.PostId"
                                           class="btn btn-info view-post-btn"
                                           title="View Post">
                                            <i class="fas fa-eye"></i> View
                                        </a>
                                        @if (!report.IsApproved.HasValue)
                                        {
                                            <div class="btn-group btn-group-sm" role="group">
                                                <button type="button"
                                                        class="btn btn-success approve-btn"
                                                        data-report-id="@report.Id"
                                                        title="Approve Report">
                                                    <i class="fas fa-check"></i> Approve
                                                </button>
                                                <button type="button"
                                                        class="btn btn-danger reject-btn"
                                                        data-report-id="@report.Id"
                                                        title="Reject Report">
                                                    <i class="fas fa-times"></i> Reject
                                                </button>
                                            </div>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                @* Pagination *@
                @if (Model.Reports.TotalPages > 1)
                {
                    <nav aria-label="Report pagination">
                        <ul class="pagination pagination-sm justify-content-center">
                            @if (Model.Reports.PageNumber > 1)
                            {
                                <li class="page-item me-2">
                                    <a class="page-link"
                                       asp-action="ViewReports"
                                       asp-route-FilterBy="@Context.Request.Query["FilterBy"]"
                                       asp-route-OrderBy="@Context.Request.Query["OrderBy"]"
                                       asp-route-Descending="@Context.Request.Query["Descending"]"
                                       asp-route-Page="@(Model.Reports.PageNumber - 1)"
                                       asp-route-pageSize="@Model.Reports.PageSize"
                                       aria-label="Previous">
                                        <span aria-hidden="true">Prev</span>
                                    </a>
                                </li>
                            }

                            @for (int i = 1; i <= Model.Reports.TotalPages; i++)
                            {
                                <li class="page-item @(i == Model.Reports.PageNumber ? "active" : "")">
                                    <a class="page-link"
                                       asp-action="ViewReports"
                                       asp-route-FilterBy="@Context.Request.Query["FilterBy"]"
                                       asp-route-OrderBy="@Context.Request.Query["OrderBy"]"
                                       asp-route-Descending="@Context.Request.Query["Descending"]"
                                       asp-route-Page="@i"
                                       asp-route-pageSize="@Model.Reports.PageSize">
                                        @i
                                    </a>
                                </li>
                            }

                            @if (Model.Reports.PageNumber < Model.Reports.TotalPages)
                            {
                                <li class="page-item ms-2">
                                    <a class="page-link"
                                       asp-action="ViewReports"
                                       asp-route-FilterBy="@Context.Request.Query["FilterBy"]"
                                       asp-route-OrderBy="@Context.Request.Query["OrderBy"]"
                                       asp-route-Descending="@Context.Request.Query["Descending"]"
                                       asp-route-Page="@(Model.Reports.PageNumber + 1)"
                                       asp-route-pageSize="@Model.Reports.PageSize"
                                       aria-label="Next">
                                        <span aria-hidden="true">Next</span>
                                    </a>
                                </li>
                            }
                        </ul>
                    </nav>
                }
            }
            else
            {
                <div class="alert alert-info text-center" role="alert">
                    <i class="fas fa-info-circle"></i> No reports found.
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.17.2/dist/sweetalert2.all.min.js"></script>
    <script>
        $(document).ready(function () {
            let currentReportId = null;
            let currentAction = null;

            function preserveFilterSelection() {
                const urlParams = new URLSearchParams(window.location.search);
                const filterBy = urlParams.get('FilterBy') || "";
                const orderBy = urlParams.get('OrderBy') || "CreatedAt";
                const descending = urlParams.get('Descending') === "true";

                $('#statusFilter').val(filterBy);
                $('#sortBy').val(`${orderBy}-${descending}`);
            }

            preserveFilterSelection();

            $(document).on('click', '.approve-btn, .reject-btn', function () {
                currentReportId = $(this).data('report-id');
                currentAction = $(this).hasClass('approve-btn');

                Swal.fire({
                    title: 'Add Note (Optional)',
                    input: 'textarea',
                    inputLabel: 'Optional Note',
                    inputPlaceholder: 'Type your note here...',
                    showCancelButton: true,
                    confirmButtonText: 'Submit',
                    confirmButtonColor: currentAction ? '#28a745' : '#dc3545',
                    cancelButtonText: 'Cancel',
                    inputAttributes: {
                        'aria-label': 'Type your optional note here'
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        const note = result.value || null;

                        $.ajax({
                            url: `/Report/ApproveReport/${currentReportId}`,
                            type: 'POST',
                            data: {
                                reportId: currentReportId,
                                approval: currentAction,
                                note: note
                            },
                            success: function (response) {
                                if (response.success) {
                                    Swal.fire({
                                        title: 'Success',
                                        text: response.message,
                                        icon: 'success',
                                        confirmButtonText: 'OK'
                                    }).then((result) => {
                                        if (result.isConfirmed) {
                                            location.reload();
                                        }
                                    });
                                } else {
                                    Swal.fire({
                                        title: 'Error',
                                        text: response.message,
                                        icon: 'error'
                                    });
                                }
                            },
                            error: function () {
                                Swal.fire({
                                    title: 'Error',
                                    text: 'An unexpected error occurred.',
                                    icon: 'error'
                                });
                            }
                        });
                    }
                });
            });

            function debounce(func, delay) {
                let timeoutId;
                return function () {
                    const context = this;
                    const args = arguments;
                    clearTimeout(timeoutId);
                    timeoutId = setTimeout(() => {
                        func.apply(context, args);
                    }, delay);
                };
            }

            const submitFilterForm = debounce(function () {
                const selectedStatus = $('#statusFilter').val();
                const sortValue = $('#sortBy').val().split('-');
                const descendingValue = sortValue[1];

                const form = $('<form>')
                    .attr('method', 'get')
                    .attr('action', '/Report/ViewReports');

                $('<input>')
                    .attr('type', 'hidden')
                    .attr('name', 'PostCategoryId')
                    .val($('select[name="PostCategoryId"]').val())
                    .appendTo(form);

                $('<input>')
                    .attr('type', 'hidden')
                    .attr('name', 'SearchTerm')
                    .val($('#searchInput').val())
                    .appendTo(form);

                $('<input>')
                    .attr('type', 'hidden')
                    .attr('name', 'FilterBy')
                    .val(selectedStatus)
                    .appendTo(form);

                $('<input>')
                    .attr('type', 'hidden')
                    .attr('name', 'OrderBy')
                    .val(sortValue[0])
                    .appendTo(form);

                $('<input>')
                    .attr('type', 'hidden')
                    .attr('name', 'Descending')
                    .val(descendingValue)
                    .appendTo(form);

                form.appendTo('body').submit();
            }, 300);

            $('#searchInput').on('input', submitFilterForm);
            $('#statusFilter').on('change', submitFilterForm);
            $('#sortBy').on('change', submitFilterForm);

            $(document).on('click', '.page-link', function (e) {
                e.preventDefault();
                const page = new URL($(this).attr('href'), window.location.origin).searchParams.get("Page") || 1;

                const form = $('<form>')
                    .attr('method', 'get')
                    .attr('action', '/Report/ViewReports');

                $('<input>')
                    .attr('type', 'hidden')
                    .attr('name', 'SearchTerm')
                    .val($('#searchInput').val())
                    .appendTo(form);

                $('<input>')
                    .attr('type', 'hidden')
                    .attr('name', 'FilterBy')
                    .val($('#statusFilter').val())
                    .appendTo(form);

                const sortValue = $('#sortBy').val().split('-');
                $('<input>')
                    .attr('type', 'hidden')
                    .attr('name', 'OrderBy')
                    .val(sortValue[0])
                    .appendTo(form);

                $('<input>')
                    .attr('type', 'hidden')
                    .attr('name', 'Descending')
                    .val(sortValue[1])
                    .appendTo(form);

                $('<input>')
                    .attr('type', 'hidden')
                    .attr('name', 'Page')
                    .val(page)
                    .appendTo(form);

                form.appendTo('body').submit();
            });

            $(document).on('click', '.view-details-btn', function () {
                const reportId = $(this).data('report-id');

                $.ajax({
                    url: `/Report/GetReportDetails/${reportId}`,
                    type: 'GET',
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                title: 'Report Details',
                                html: `
                                    <div class="text-left">
                                        <p><strong>Username:</strong> ${response.username}</p>
                                        <p><strong>Post Title:</strong> ${response.postTitle}</p>
                                        <p><strong>Reason:</strong> ${response.reason}</p>
                                        <p><strong>Status:</strong> ${response.status}</p>
                                        <p><strong>Submitted At:</strong> ${response.createdAt}</p>
                                        ${response.note ? `<p><strong>Moderator Note:</strong> ${response.note}</p>` : ''}
                                    </div>
                                `,
                                icon: 'info',
                                confirmButtonText: 'Close'
                            });
                        } else {
                            Swal.fire({
                                title: 'Error',
                                text: response.message,
                                icon: 'error'
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            title: 'Error',
                            text: 'Unable to fetch report details.',
                            icon: 'error'
                        });
                    }
                });
            });
        });
    </script>
}