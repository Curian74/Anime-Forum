@using WibuBlog.Helpers
@using WibuBlog.ViewModels.Report
@model ReportsVM

<link rel="stylesheet" href="~/fontawesome/css/all.css" />
<link rel="stylesheet" href="~/css/postDetail.css" />
<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.17.2/dist/sweetalert2.min.css" rel="stylesheet">

<div class="container-fluid">
    <div class="card">
        <div class="card-header bg-primary text-white">
            <h4 class="mb-0">Report Management</h4>
        </div>
        <div class="card-body">
            <div class="row mb-3">
                <div class="col-md-4">
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-search"></i></span>
                        <input type="text"
                               class="form-control"
                               id="searchInput"
                               placeholder="Search reports..."
                               name="SearchTerm"
                               value="@Context.Request.Query["SearchTerm"]">
                    </div>
                </div>
                <div class="col-md-4">
                    <select class="form-select" id="statusFilter" name="FilterBy">
                        <option value="">All Statuses</option>
                        <option value="pending"
                        @(Context.Request.Query["FilterBy"] == "pending" ? "selected" : "")>
                            Pending
                        </option>
                        <option value="approved"
                        @(Context.Request.Query["FilterBy"] == "approved" ? "selected" : "")>
                            Approved
                        </option>
                        <option value="rejected"
                        @(Context.Request.Query["FilterBy"] == "rejected" ? "selected" : "")>
                            Rejected
                        </option>
                    </select>
                </div>
                <div class="col-md-4">
                    <select class="form-select" id="sortBy" name="OrderBy">
                        <option value="CreatedAt-true"
                        @(Context.Request.Query["OrderBy"] == "CreatedAt" &&
                            Context.Request.Query["Descending"] == "true" ? "selected" : "")>
                            Newest First
                        </option>
                        <option value="CreatedAt-false"
                        @(Context.Request.Query["OrderBy"] == "CreatedAt" &&
                            Context.Request.Query["Descending"] == "false" ? "selected" : "")>
                            Oldest First
                        </option>
                    </select>
                </div>
            </div>

            @if (Model?.Reports?.Items != null && Model.Reports.Items.Any())
            {
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead class="table-light">
                            <tr>
                                <th>Username</th>
                                <th>Post Title</th>
                                <th>Reason</th>
                                <th>Status</th>
                                <th>Created At</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody id="reportsTableBody">
                            @foreach (var report in Model.Reports.Items)
                            {
                                <tr data-report-id="@report.Id">
                                    <td>@report.Username</td>
                                    <td>@report.PostTitle</td>
                                    <td>@report.Reason</td>
                                    <td>
                                        @switch (report.IsApproved)
                                        {
                                            case true:
                                                <span class="badge bg-success">Approved</span>
                                                break;
                                            case false:
                                                <span class="badge bg-danger">Rejected</span>
                                                break;
                                            default:
                                                <span class="badge bg-warning">Pending</span>
                                                break;
                                        }
                                    </td>
                                    <td>@report.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                                    <td>
                                        @if (!report.IsApproved.HasValue)
                                        {
                                            <div class="btn-group btn-group-sm" role="group">
                                                <button type="button" 
                                                        class="btn btn-success approve-btn" 
                                                        data-report-id="@report.Id"
                                                        title="Approve Report">
                                                    <i class="fas fa-check"></i> Approve
                                                </button>
                                                <button type="button" 
                                                        class="btn btn-danger reject-btn" 
                                                        data-report-id="@report.Id"
                                                        title="Reject Report">
                                                    <i class="fas fa-times"></i> Reject
                                                </button>
                                            </div>
                                        }
                                        else
                                        {
                                            <button type="button" 
                                                    class="btn btn-info btn-sm view-details-btn" 
                                                    data-report-id="@report.Id">
                                                <i class="fas fa-eye"></i> View Details
                                            </button>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                @* Pagination *@
                @if (Model.Reports.TotalPages > 1)
                {
                    <nav aria-label="Report pagination">
                        <ul class="pagination justify-content-center">
                            @if (Model.Reports.PageNumber > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link"
                                       asp-action="ViewReports"
                                       asp-route-Page="@(Model.Reports.PageNumber - 1)"
                                       asp-route-Size="@Model.Reports.PageSize">
                                        <i class="fas fa-chevron-left"></i> Previous
                                    </a>
                                </li>
                            }
                            @for (int i = 1; i <= Model.Reports.TotalPages; i++)
                            {
                                <li class="page-item @(i == Model.Reports.PageNumber ? "active" : "")">
                                    <a class="page-link"
                                       asp-action="ViewReports"
                                       asp-route-Page="@i"
                                       asp-route-Size="@Model.Reports.PageSize">
                                        @i
                                    </a>
                                </li>
                            }
                            @if (Model.Reports.PageNumber < Model.Reports.TotalPages)
                            {
                                <li class="page-item">
                                    <a class="page-link"
                                       asp-action="ViewReports"
                                       asp-route-Page="@(Model.Reports.PageNumber + 1)"
                                       asp-route-Size="@Model.Reports.PageSize">
                                        Next <i class="fas fa-chevron-right"></i>
                                    </a>
                                </li>
                            }
                        </ul>
                    </nav>
                }
            }
            else
            {
                <div class="alert alert-info text-center" role="alert">
                    <i class="fas fa-info-circle"></i> No reports found.
                </div>
            }
        </div>
    </div>

    <!-- Modal for Adding Notes -->
    <div class="modal fade" id="noteModal" tabindex="-1" role="dialog" aria-labelledby="noteModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="noteModalLabel">Add Note</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <textarea id="reportNote" class="form-control" rows="3" placeholder="Optional note..."></textarea>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" id="submitNoteBtn">Submit</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.17.2/dist/sweetalert2.all.min.js"></script>
    <script>
        $(document).ready(function() {
            let currentReportId = null;
            let currentAction = null;
            const $reportsTableBody = $('#reportsTableBody');
            const $searchInput = $('#searchInput');
            const $statusFilter = $('#statusFilter');
            const $sortBy = $('#sortBy');

            // Approve/Reject Report Buttons
            $(document).on('click', '.approve-btn, .reject-btn', function() {
                currentReportId = $(this).data('report-id');
                currentAction = $(this).hasClass('approve-btn');
                $('#noteModal').modal('show');
            });

            // Submit Note and Approve/Reject
            $('#submitNoteBtn').on('click', function() {
                if (!currentReportId || currentAction === null) {
                    Swal.fire({
                        title: 'Error',
                        text: 'Invalid report selection. Please try again.',
                        icon: 'error'
                    });
                    return;
                }

                const note = $('#reportNote').val() || null;

                $.ajax({
                    url: `/Report/ApproveReport/${currentReportId}`,
                    type: 'POST',
                    data: {
                        reportId: currentReportId,
                        approval: currentAction,
                        note: note
                    },
                    success: function(response) {
                        if (response.success) {
                            Swal.fire({
                                title: 'Success',
                                text: response.message,
                                icon: 'success',
                                confirmButtonText: 'OK'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    location.reload();
                                }
                            });
                        } else {
                            Swal.fire({
                                title: 'Error',
                                text: response.message,
                                icon: 'error'
                            });
                        }
                    },
                    error: function() {
                        Swal.fire({
                            title: 'Error',
                            text: 'An unexpected error occurred.',
                            icon: 'error'
                        });
                    }
                });

                $('#reportNote').val('');
                currentReportId = null;
                currentAction = null;
                $('#noteModal').modal('hide');
            });

            // Handle filter changes
            $('#searchInput, #statusFilter, #sortBy').on('change', function() {
                // Parse the sort value
                const sortValue = $('#sortBy').val().split('-');

                // Create a form submission
                const form = $('<form>')
                    .attr('method', 'get')
                    .attr('action', '@Url.Action("ViewReports", "Report")');

                // Add filter parameters
                $('<input>')
                    .attr('type', 'hidden')
                    .attr('name', 'SearchTerm')
                    .val($('#searchInput').val())
                    .appendTo(form);

                $('<input>')
                    .attr('type', 'hidden')
                    .attr('name', 'FilterBy')
                    .val($('#statusFilter').val())
                    .appendTo(form);

                $('<input>')
                    .attr('type', 'hidden')
                    .attr('name', 'OrderBy')
                    .val(sortValue[0])
                    .appendTo(form);

                $('<input>')
                    .attr('type', 'hidden')
                    .attr('name', 'Descending')
                    .val(sortValue[1])
                    .appendTo(form);

                form.appendTo('body').submit();
            });

            // View Details Button Handler
            $(document).on('click', '.view-details-btn', function() {
                const reportId = $(this).data('report-id');

                // You might want to implement an AJAX call to fetch report details
                Swal.fire({
                    title: 'Report Details',
                    text: 'Detailed view for Report ID: ' + reportId,
                    icon: 'info'
                });
            });
        });
    </script>
}